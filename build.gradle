buildscript {
	ext {
		querydslVersion = '4.3.1'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1' apply false
	id 'io.spring.dependency-management' version '1.1.0'
}

def javaProjects = [
		project(":movie-note-api"),
		project(":movie-note-core"),
		project(":movie-note-common"),
		project(":movie-note-clients:aws-resource")
]

configure(javaProjects) {
	apply plugin: "java"
	apply plugin: "org.springframework.boot"
	apply plugin: "io.spring.dependency-management"

	group = 'com.oldteam.movienote'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '17'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'

		annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

		implementation 'ca.pjer:logback-awslogs-appender:1.6.0'
		implementation 'org.codehaus.janino:janino:3.1.7'

	}

}

def webProjects = [
        project(":movie-note-api"),
]

configure(webProjects) {
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-webflux'

		implementation 'org.springframework.boot:spring-boot-starter-security'

		// jwt
		implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
		implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
		implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

		// swagger
		implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

//		implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
	}
}

def jpaProjects = [
		project(":movie-note-core"),
		project(":movie-note-api")
]

configure(jpaProjects) {

	dependencies {
		//JPA, 스프링 데이터 JPA 추가
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

		//Querydsl 추가
		implementation 'com.querydsl:querydsl-jpa'
		annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
		annotationProcessor "jakarta.annotation:jakarta.annotation-api"
		annotationProcessor "jakarta.persistence:jakarta.persistence-api"

		runtimeOnly 'com.h2database:h2'
		runtimeOnly 'mysql:mysql-connector-java:8.0.30'
	}

	//Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거
	clean {
		delete file('src/main/generated')
	}

}